# config for modules
# Copyright(C) 2007-2020 Goke Inc.
###################################
#主芯片选择
CHIP_ARCH=gk7101
###################################
#平台选择
#BOARD_ARCH=evb
BOARD_ARCH=jiuan
###################################
#模块配置参数区
#看门狗
SUPPORT_WATCHDOG_CONFIG=y

#RTSP 模块
SUPPORT_RTSP_CONFIG=y

#ONVIF 模块
SUPPORT_ONVIF_CONFIG=y

#HTTP 模块
SUPPORT_HTTP_CONFIG=y

#CMS 模块
SUPPORT_CMS_CONFIG=y

#CMS OLD 模块
SUPPORT_OLD_CMS_CONFIG=n

#大拿模块
SUPPORT_DANA_CONFIG=n

#tutk模块
SUPPORT_TUTK_CONFIG=n

#悠络客P2P
SUPPORT_ULUCU_CONFIG=n

# mtws P2P
SUPPORT_MTWS_P2P=n

#ntp
SUPPORT_NTP_CONFIG=y

#云霓科技P2P
SUPPORT_YUNNI_P2P=n

#搜索生产工具
SUPPORT_GK_SEARCH=y

#大华协议
SUPPORT_DAHUA_CONFIG=n

#雄迈协议
SUPPORT_XMAI_CONFIG=n

#海康协议
SUPPORT_HIK_CONFIG=n

#本地录像
SUPPORT_LOCAL_REC=y

#默认工作队列
SUPPORT_DEFAULT_WORKQUEUE=y

#软件回音消除
SUPPORT_ECHO_CANCEL=y

#录制pcm文件
SUPPORT_REC_PCM=n

# UPNP
SUPPORT_UPNP=n

# YUDP
SUPPORT_YUDP=n

#RF433
SUPPORT_RF433_CONFIG=n

#FACTORY TEST
SUPPORT_FACTORY_TEST=y

#PPCS支持
SUPPORT_PPCS_CONFIG=n

#AP+STA
SUPPORT_AP_STA=n

#浪涛p2p
SUPPORT_GOOLINK_CONFIG=n

#支持mail
SUPPORT_MAIL=n

#支持mail openssl
SUPPORT_OPENSSL=n

#支持二维码扫码配网
SUPPORT_QRCODE_LINK=n

#ZRAM
SUPPORT_ZRAM=n

#vision
SUPPORT_GKVISION=n

#gb28181
SUPPORT_GB28181=y

#mojing
SUPPORT_MOJING=n
SUPPORT_MOJING_V4=n

#mojing log
SUPPORT_MOJING_LOG=n

#mofang
SUPPORT_MOFANG=n
USE_NANOPB=n

#goke_upgrade
SUPPORT_GOKE_UPGRADE=y

#upgrade in readfifo
SUPPORT_UPGRADE_OUT=y

#//支持加密IC功能
SUPPORT_ENCRYPT_AUTHOR = n

#支持AF
SUPPORT_AF = n

#支持K24C02 EEPROM
SUPPORT_K24C02_EEPROM = n

SUPPORT_SHELL = n

#goke server
SUPPORT_GOKE_SERVER = y
###################################


ifeq ($(SUPPORT_UPGRADE_OUT),y)
CCFLAGS_USER += -DMODULE_SUPPORT_UPGRADE_OUT
SUPPORT_WATCHDOG_CONFIG=n
endif

ifeq ($(SUPPORT_WATCHDOG_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_WATCHDOG
endif

ifeq ($(SUPPORT_RTSP_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_RTSP
endif

ifeq ($(SUPPORT_ONVIF_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_ONVIF
endif

ifeq ($(SUPPORT_HTTP_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_HTTP
endif

ifeq ($(SUPPORT_NTP_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_NTP
endif

ifeq ($(SUPPORT_CMS_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_CMS
endif

ifeq ($(SUPPORT_LOCAL_REC),y)
CCFLAGS_USER += -DMODULE_SUPPORT_LOCAL_REC
endif


ifeq ($(SUPPORT_REC_PCM),y)
CCFLAGS_USER += -DMODULE_SUPPORT_REC_PCM
endif

ifeq ($(SUPPORT_OLD_CMS_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_OLD_CMS
endif

ifeq ($(SUPPORT_DAHUA_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_DAHUA
endif

ifeq ($(SUPPORT_XMAI_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_XMAI
endif

ifeq ($(SUPPORT_HIK_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_HIK
endif

ifeq ($(SUPPORT_LOCAL_WATCHDOG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_LOCAL_WATCHDOG
endif

ifeq ($(SUPPORT_YUNNI_P2P),y)
CCFLAGS_USER += -DMODULE_SUPPORT_YUNNI_P2P
endif

ifeq ($(SUPPORT_GK_SEARCH),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GK_SEARCH
endif

ifeq ($(SUPPORT_DANA_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_DANA
endif

ifeq ($(SUPPORT_GOOLINK_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GOOLINK
endif

ifeq ($(SUPPORT_TUTK_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_TUTK
endif

ifeq ($(SUPPORT_MTWS_P2P),y)
CCFLAGS_USER += -DMODULE_SUPPORT_MTWS_P2P
endif

ifeq ($(SUPPORT_DEFAULT_WORKQUEUE),y)
CCFLAGS_USER += -DMODULE_SUPPORT_WORKQUEUE
endif

ifeq ($(SUPPORT_ULUCU_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_ULUCU
endif

ifeq ($(SUPPORT_ECHO_CANCEL),y)
CCFLAGS_USER += -DAUDIO_ECHO_CANCELLATION_SUPPORT
endif

ifeq ($(SUPPORT_RF433_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_RF433
endif

ifeq ($(SUPPORT_FACTORY_TEST),y)
CCFLAGS_USER += -DMODULE_SUPPORT_FACTORY_TEST
endif

ifeq ($(SUPPORT_PPCS_CONFIG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_PPCS
endif

ifeq ($(SUPPORT_AP_STA),y)
CCFLAGS_USER += -DAP_STA_SUPPORT
endif

ifeq ($(SUPPORT_GKVISION),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GKVISION
endif

ifeq ($(SUPPORT_GB28181),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GB28181
endif


ifeq ($(SUPPORT_MOJING),y)
CCFLAGS_USER += -DMODULE_SUPPORT_MOJING
    ifeq ($(SUPPORT_MOJING_V4),y)
    CCFLAGS_USER += -DMODULE_SUPPORT_MOJING_V4
    endif
endif

ifeq ($(SUPPORT_MOJING_LOG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_UDP_LOG
endif

ifneq ($(USE_NANOPB),y)
CCFLAGS_USER += -DMOJING_USE_PROTOBUF
endif

ifeq ($(SUPPORT_MOFANG),y)
CCFLAGS_USER += -DMODULE_SUPPORT_MOFANG
endif

ifeq ($(SUPPORT_GOKE_UPGRADE),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GOKE_UPGRADE
endif

ifeq ($(SUPPORT_GK6323_FACE),y)
CCFLAGS_USER += -DMODULE_SUPPORT_FACE_6323
endif

ifeq ($(SUPPORT_ENCRYPT_AUTHOR),y)
CCFLAGS_USER += -DMODULE_SUPPORT_ENCRYPT_AUTHOR
endif

ifeq ($(SUPPORT_WAVE_CHANNEL),y)
CCFLAGS_USER += -DMODULE_SUPPORT_WAVE_CHANNEL
endif

ifeq ($(SUPPORT_MAIL),y)
CCFLAGS_USER += -DMODULE_SUPPORT_MAIL
endif

ifeq ($(SUPPORT_UPNP),y)
CCFLAGS_USER += -DMODULE_UPNP
endif

ifeq ($(SUPPORT_OPENSSL),y)
CCFLAGS_USER += -DHAVE_SSL
endif

ifeq ($(SUPPORT_YUDP),y)
CCFLAGS_USER += -DMODULE_YUDP
endif

ifeq ($(SUPPORT_QRCODE_LINK),y)
CCFLAGS_USER += -DMODULE_SUPPORT_QRCODE_LINK
endif

ifeq ($(SUPPORT_ZRAM),y)
CCFLAGS_USER += -DMODULE_SUPPORT_ZRAM
endif

ifeq ($(SUPPORT_AF),y)
CCFLAGS_USER += -DMODULE_SUPPORT_AF
endif

ifeq ($(SUPPORT_K24C02_EEPROM),y)
CCFLAGS_USER += -DMODULE_SUPPORT_K24C02_EEPROM
endif

ifeq ($(SUPPORT_SHELL),y)
CCFLAGS_USER += -DMODULE_SUPPORT_SHELL
endif

ifeq ($(SUPPORT_GOKE_SERVER),y)
CCFLAGS_USER += -DMODULE_SUPPORT_GOKE_SERVER
endif
